{
	"name": "sql_load_to_dw",
	"properties": {
		"folder": {
			"name": "sql"
		},
		"content": {
			"query": "SELECT * FROM  dbo.StageProduct;\n \nALTER TABLE dbo.StageProduct\nADD \nColor VARCHAR(50),\nSize VARCHAR (50),\nDiscontinued VARCHAR (50);\nGO\n\nALTER TABLE dbo.StageProduct\nALTER COLUMN ProductCategory VARCHAR (50) NULL;\nGO\n\n\n--copy from stage to dim\nCOPY INTO dbo.StageProduct\n    (ProductID, ProductName, ProductCategory, Color, Size, ListPrice, Discontinued)\nFROM 'https://hallincdatalake.dfs.core.windows.net/hallinc/raw/csv/products/Product.csv'\nWITH\n(\n    FILE_TYPE = 'CSV',\n    MAXERRORS = 0,\n    IDENTITY_INSERT = 'OFF',\n    FIRSTROW = 2 --Skip header row\n);\nGO\n\n\nSELECT COUNT(1) \nFROM dbo.StageProduct;\nGO\n\n--create staging table for customers\nCREATE TABLE dbo.DimCustomer\n(\n    GeographyKey VARCHAR (50) NOT NULL,\n    CustomerAlternateKey VARCHAR (50) NOT NULL,\n    Title VARCHAR (50),\n    FirstName VARCHAR (50),\n    MiddleName VARCHAR (50),\n    LastName VARCHAR (50),\n    NameStyle VARCHAR (50),\n    BirthDate VARCHAR (50), \n    MaritalStatus VARCHAR (50),\n    Suffix VARCHAR (50),\n    Gender VARCHAR (50),\n    EmailAddress VARCHAR (50),\n    YearlyIncome VARCHAR (50),\n    TotalChildren VARCHAR (50),\n    NumberChildrenAtHome VARCHAR (50),\n    EnglishEducation VARCHAR (50), \n    SpanishEducation VARCHAR (50),\n    FrenchEducation VARCHAR (50),\n    EnglishOccupation VARCHAR (50),\n    SpanishOccupation VARCHAR (50),\n    FrenchOccupation VARCHAR (50),\n    HouseOwnerFlag VARCHAR (50), \n    NumberCarsOwned VARCHAR (50),\n    AddressLine1 VARCHAR (50),\n    AddressLine2 VARCHAR (50),\n    Phone VARCHAR (50),\n    DateFirstPurchase VARCHAR (50),\n    CommuteDistance VARCHAR (50)\n)\nWITH\n(\n    DISTRIBUTION = ROUND_ROBIN,\n    CLUSTERED COLUMNSTORE INDEX\n);\nGO\n\n--populate table with data from file\nCOPY INTO dbo.StageCustomer\n (GeographyKey, CustomerAlternateKey, Title, FirstName, MiddleName, LastName, NameStyle, BirthDate, \n MaritalStatus, Suffix, Gender, EmailAddress, YearlyIncome, TotalChildren, NumberChildrenAtHome, EnglishEducation, \n SpanishEducation, FrenchEducation, EnglishOccupation, SpanishOccupation, FrenchOccupation, HouseOwnerFlag, \n NumberCarsOwned, AddressLine1, AddressLine2, Phone, DateFirstPurchase, CommuteDistance)\n\n FROM 'https://hallincdatalake.dfs.core.windows.net/hallinc/raw/csv/customer/Customer.csv'\n WITH\n (\n    FILE_TYPE = 'CSV',\n    MAXERRORS = 5, \n    FIRSTROW = 2\n);\nGO\n\n--clean dim products\nDROP TABLE dbo.DimProduct;\nGO\n\n--create dimproducts\nCREATE TABLE dbo.DimProduct\n WITH\n (\n     DISTRIBUTION = HASH(ProductAltKey),\n     CLUSTERED COLUMNSTORE INDEX\n )\n AS\n SELECT ROW_NUMBER() OVER(ORDER BY ProductID) AS ProductKey,\n     ProductID AS ProductAltKey,\n     ProductName,\n     ProductCategory,\n     Color,\n     Size,\n     ListPrice,\n     Discontinued\n FROM dbo.StageProduct;\n\n--insert data to dimProduct\nINSERT INTO dbo.DimProduct\n(\n    ProductID,\n    ProductName,\n    ProductCategory,\n    ListPrice,\n    Color,\n    Size,\n    Discontinued\n)\nSELECT \n    ProductID,\n    ProductName,\n    ProductCategory,\n    ListPrice,\n    Color,\n    Size,\n    Discontinued\nFROM dbo.StageProduct;\nGO\n\n--scd customer\n\n--insert\nINSERT INTO dbo.DimCustomer (\n    [GeographyKey],[CustomerAlternateKey],[Title],[FirstName],[MiddleName],[LastName],[NameStyle],[BirthDate],[MaritalStatus],\n    [Suffix],[Gender],[EmailAddress],[YearlyIncome],[TotalChildren],[NumberChildrenAtHome],[EnglishEducation],[SpanishEducation],[FrenchEducation],\n    [EnglishOccupation],[SpanishOccupation],[FrenchOccupation],[HouseOwnerFlag],[NumberCarsOwned],[AddressLine1],[AddressLine2],[Phone],\n    [DateFirstPurchase],[CommuteDistance]\n)\nSELECT *\nFROM dbo.StageCustomer AS stg\nWHERE NOT EXISTS(\n    SELECT * FROM dbo.DimCustomer AS dim\n    WHERE dim.CustomerAlternateKey = stg.CustomerAlternateKey\n);\n\n-- Type 1 updates (change name, email, or phone in place)\n UPDATE dbo.DimCustomer\n SET LastName = stg.LastName,\n     EmailAddress = stg.EmailAddress,\n     Phone = stg.Phone\n FROM DimCustomer dim inner join StageCustomer stg\n ON dim.CustomerAlternateKey = stg.CustomerAlternateKey\n WHERE dim.LastName <> stg.LastName OR dim.EmailAddress <> stg.EmailAddress OR dim.Phone <> stg.Phone\n\n-- Type 2 updates (address changes triggers new entry)\nINSERT INTO dbo.DimCustomer\nSELECT \n    stg.GeographyKey,\n    stg.CustomerAlternateKey,\n    stg.Title,\n    stg.FirstName,\n    stg.MiddleName,\n    stg.LastName,\n    stg.NameStyle,\n    stg.BirthDate,\n    stg.MaritalStatus,\n    stg.Suffix,\n    stg.Gender,\n    stg.EmailAddress,\n    stg.YearlyIncome,\n    stg.TotalChildren,\n    stg.NumberChildrenAtHome,\n    stg.EnglishEducation,\n    stg.SpanishEducation,\n    stg.FrenchEducation,\n    stg.EnglishOccupation,\n    stg.SpanishOccupation,\n    stg.FrenchOccupation,\n    stg.HouseOwnerFlag,\n    stg.NumberCarsOwned,\n    stg.AddressLine1,\n    stg.AddressLine2,\n    stg.Phone,\n    stg.DateFirstPurchase,\n    stg.CommuteDistance\nFROM dbo.StageCustomer AS stg\nJOIN dbo.DimCustomer AS dim\nON stg.CustomerAlternateKey = dim.CustomerAlternateKey\nAND stg.AddressLine1 <> dim.AddressLine1;\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "hallincDW",
				"poolName": "hallincDW"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}